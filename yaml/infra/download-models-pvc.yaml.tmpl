apiVersion: batch/v1
kind: Job
metadata:
  name: download-models-pvc
spec:
  template:
    metadata:
      name: download-models-pvc
    spec:
      volumes:
        - name: models-storage
          persistentVolumeClaim:
            claimName: models-pvc
      containers:
      - name: download-models-pvc
        image: registry.redhat.io/ubi9/python-312
        command: ["/bin/bash", "-c"]
        args:
          - |            
            pip3 install --upgrade huggingface_hub
            
            download_hf_model() {
              # Check if a repository name was provided.
              if [ -z "$1" ]; then
                echo "Error: No repository name provided."
                echo "Usage: download_hf_model <repo_name>"
                return 1
              fi

              # The full name of the repository from Hugging Face (e.g., "Qwen/Qwen2.5-7B-Instruct").
              local repo_name="$1"

              # The base directory where all models will be stored.
              local base_dir="/mnt/models"

              
              if [ -d "$base_dir/$repo_name" ]; then
                echo "Model '$repo_name' already exists in $base_dir. Skipping."
                return 0  
              fi
              
              echo "Model not found in /mnt/models. Proceeding with download..."
              
              # The full path to the local directory for the model.
              local local_dir="$base_dir/$repo_name"

              echo "Creating directory: $local_dir"
              mkdir -p "$local_dir"

              # Check if mkdir was successful.
              if [ $? -ne 0 ]; then
                echo "Error: Failed to create directory."
                return 1
              fi

              # 2. Download the model using hf download.
              echo "Downloading model '$repo_name' to '$local_dir'..."
              hf download "$repo_name" --local-dir "$local_dir" || exit 1
              rm -rf "$local_dir/.cache"

              # Check if the download was successful.
              if [ $? -eq 0 ]; then
                echo "Model download completed successfully!"
              else
                echo "Error: Model download failed."
                return 1
              fi
            }
            
            for model in $MODELS; do
              download_hf_model $model
            done            
        env:
          - name: MODELS
            value: "${MODEL_LIST}"
          - name: HF_TOKEN
            value: "${HF_TOKEN}"
        volumeMounts:
          - name: models-storage
            mountPath: "/mnt/models"
      restartPolicy: Never    
  backoffLimit: 3